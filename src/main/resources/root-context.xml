<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<mybatis-spring:scan base-package="com.uni.wt"/>
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
		
	
	<bean id="realDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name = "driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name = "url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name = "username" value="WT"/>
		<property name = "password" value="WT"/>
		<property name = "defaultAutoCommit" value="false"/>
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource"/><!-- 기존에 쓰든 Datasource는 생성자로 주입 -->
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/><!-- MULTI_LINE : 줄바꿈 -->
				<property name="sqlPrefix" value="[SQL] "/><!-- 접두사 -->
			</bean>
		</property>
	</bean>
	<!-- 여기서 가끔 class를 찾지 못하거나 그냥 알수없는 에러가 발생하는 경우가 있는데 그경우 jar파일이 제대로 pom.xml을 통해서 설치가 안된것이니 maven을 clean하고 재 install해주자. -->
	
	
	<!-- 트랜잭션매니저를 사용해서 트랜잭션을 할 수 있도록 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	  <tx:annotation-driven transaction-manager="transactionManager"/>

	
	  <tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>

		<aop:pointcut expression="execution(* com.uni.wt..*ServiceImpl*.*(..))" id="serviceMethod"/>

		<aop:advisor id= "transactionAdvisor" pointcut-ref = "serviceMethod" advice-ref="txAdvice"/>
	</aop:config>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize" value="100000000" />
	</bean>
	
	
	
</beans>

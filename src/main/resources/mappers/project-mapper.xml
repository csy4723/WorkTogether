<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uni.wt.project.model.dao.ProjectMapper">
    <resultMap type="Project" id="projectSet">
        <id property="pj_no" column="PJ_NO"/>
        <result property="pj_title" column="PJ_TITLE"/>
        <result property="pj_content" column="PJ_CONTENT"/>
        <result property="create_date" column="CREATE_DATE"/>
        <result property="board_power" column="BOARD_POWER"/>
        <result property="reply_power" column="REPLY_POWER"/>
        <result property="file_power" column="FILE_POWER"/>
        <result property="status" column="STATUS"/>
    </resultMap>
    <resultMap type="Employee" id="employeeSet">
        <id property="emp_no" column="EMP_NO"/>
        <result property="dept_code" column="DEPT_CODE"/>
        <result property="upper_dept_code" column="UPPER_DEPT_CODE"/>
        <result property="job_name" column="JOB_NAME"/>
        <result property="name" column="NAME"/>
    </resultMap>
    <select id="nextPjNo" resultType="int">
        SELECT PJ_SEQ.NEXTVAL
        FROM DUAL
    </select>

    <insert id="insertProject" parameterType="Project">
        INSERT INTO PROJECT
        VALUES (#{pj_no}, #{pj_title}, #{pj_content}, SYSDATE, #{board_power}, #{reply_power}, #{file_power}, DEFAULT)
    </insert>

    <select id="selectMyProject" resultMap="projectSet" parameterType="int">
        SELECT *
        FROM PROJECT
        WHERE STATUS = 'Y'
          AND PJ_NO IN (SELECT PJ_NO FROM PROJECT_MEMBER WHERE EMP_NO = #{loginEmp}
            MINUS
        SELECT PJ_NO
        FROM PJ_BOOKMARK
        WHERE EMP_NO = #{loginEmp})
        ORDER BY PJ_NO
    </select>

    <select id="selectMyBookmarkProject" resultMap="projectSet" parameterType="int">
        SELECT *
        FROM PROJECT
        WHERE STATUS = 'Y'
          AND PJ_NO IN (SELECT PJ_NO FROM PJ_BOOKMARK WHERE EMP_NO = #{loginEmp})
        ORDER BY PJ_NO
    </select>
    <select id="selectMyProjectByTag" resultMap="projectSet" parameterType="ProjectTag">
        SELECT *
        FROM PROJECT
        WHERE STATUS = 'Y'
          AND PJ_NO IN (SELECT PJ_NO FROM PROJECT_MEMBER WHERE EMP_NO = #{emp_no}
            MINUS
        SELECT PJ_NO
        FROM PJ_BOOKMARK
        WHERE EMP_NO = #{emp_no}
        INTERSECT
        SELECT PJ_NO
        FROM PROJECT_TAG
        WHERE TAG_NO = #{tag_no})
        ORDER BY PJ_NO
    </select>
    <select id="selectMyBookmarkProjectByTag" resultMap="projectSet" parameterType="ProjectTag">
        SELECT *
        FROM PROJECT
        WHERE STATUS = 'Y'
          AND PJ_NO IN (SELECT PJ_NO
                        FROM PJ_BOOKMARK
                        WHERE EMP_NO = #{emp_no}
                        INTERSECT
                        SELECT PJ_NO
                        FROM PROJECT_TAG
                        WHERE TAG_NO = #{tag_no})
        ORDER BY PJ_NO
    </select>
    <select id="selectOneProject" parameterType="int" resultMap="projectSet">
        SELECT *
        FROM PROJECT
        WHERE STATUS = 'Y'
          AND PJ_NO = #{pj_no}
    </select>
    <select id="getProjectMemberCount" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM PROJECT_MEMBER
        WHERE PJ_NO = #{pj_no}
    </select>
    <insert id="addTag" parameterType="ProjectTag">
        INSERT INTO MB_PJ_TAG
        VALUES (TAG_SEQ.NEXTVAL, #{tag_name}, #{emp_no})
    </insert>
    <update id="editTag" parameterType="ProjectTag">
        UPDATE MB_PJ_TAG
        SET TAG_NAME = #{tag_name}
        WHERE TAG_NO = #{tag_no}
    </update>
    <delete id="removeTag" parameterType="ProjectTag">
        DELETE
        FROM MB_PJ_TAG
        WHERE TAG_NO = #{tag_no}
    </delete>
    <select id="selectEmpListByPj" parameterType="int" resultMap="employeeSet">
        SELECT B.EMP_NO, B.NAME, C.JOB_NAME
        FROM PROJECT_MEMBER A
                 JOIN EMPLOYEE B
                      ON A.EMP_NO = B.EMP_NO
                 LEFT JOIN JOB C
                           ON B.JOB_CODE = C.JOB_CODE
        WHERE A.PJ_NO = #{pj_no}
    </select>
    <select id="selectEmpInviteList" parameterType="int" resultMap="employeeSet">
        SELECT A.EMP_NO, A.NAME, B.JOB_NAME
        FROM EMPLOYEE A
                 LEFT JOIN JOB B
                           ON A. JOB_CODE = B.JOB_CODE
        WHERE A.EMP_NO NOT IN (SELECT EMP_NO FROM PROJECT_MEMBER WHERE PJ_NO = #{pj_no})
    </select>
    <update id="editReply" parameterType="Reply">
        UPDATE BOARD_REPLY
        SET REPLY_CONTENT = #{reply_content}
        WHERE REPLY_NO = #{reply_no}
    </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uni.wt.project.boardAll.model.dao.BoardAllMapper">
    <resultMap type="BoardAll" id="boardAllSet">
        <id property="board_no" column="BOARD_NO"/>
        <result property="pj_no" column="PJ_NO"/>
        <result property="board_type" column="BOARD_TYPE"/>
        <result property="writer" column="WRITER"/>
        <result property="create_date" column="CREATE_DATE"/>
        <result property="post_title" column="POST_TITLE"/>
        <result property="sch_title" column="SCH_TITLE"/>
        <result property="todo_title" column="TODO_TITLE"/>
        <result property="sch_start" column="SCH_START"/>
        <result property="change_name" column="CHANGE_NAME"/>
    </resultMap>
    <resultMap type="Reply" id="replySet">
        <id property="reply_no" column="REPLY_NO"/>
        <result property="board_no" column="BOARD_NO"/>
        <result property="writer" column="WRITER"/>
        <result property="name" column="NAME"/>
        <result property="reply_content" column="REPLY_CONTENT"/>
        <result property="create_date" column="CREATE_DATE"/>
        <result property="change_name" column="CHANGE_NAME"/>
    </resultMap>
    <select id="nextBoardNo" resultType="int">
        SELECT BOARD_SEQ.NEXTVAL
        FROM DUAL
    </select>
    <insert id="insertBoard" parameterType="BoardAll">
        INSERT INTO PJ_BOARD
        VALUES (#{board_no}, #{pj_no}, #{board_type}, #{writer}, SYSDATE, DEFAULT)
    </insert>
    <select id="selectBoardProfilePic" parameterType="int" resultType="String">
        SELECT C.CHANGE_NAME
        FROM PJ_BOARD A
                 JOIN EMPLOYEE B
                      ON A.WRITER = B.EMP_NO
                 LEFT JOIN ATTACHMENT C
                           ON B.FILE_NO = C.FILE_NO
        WHERE A.BOARD_NO = #{board_no}
    </select>
    <select id="selectAllBoard" parameterType="int" resultMap="boardAllSet">
        SELECT DISTINCT A.BOARD_NO,
                        A.PJ_NO,
                        A.BOARD_TYPE,
                        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD HH24:MI') AS CREATE_DATE,
                        E.NAME,
                        B.POST_TITLE,
                        C.SCH_TITLE,
                        C.SCH_START,
                        D.TODO_TITLE,
                        F.CHANGE_NAME
        FROM PJ_BOARD A
                 LEFT JOIN BOARD_POST B
                           ON A.BOARD_NO = B.BOARD_NO
                 LEFT JOIN BOARD_SCHEDULE C
                           ON A.BOARD_NO = C.BOARD_NO
                 LEFT JOIN BOARD_TODO D
                           ON A.BOARD_NO = D.BOARD_NO
                 JOIN EMPLOYEE E
                      ON A.WRITER = E.EMP_NO
                 LEFT JOIN ATTACHMENT F
                           ON (F.FILE_NO = E.FILE_NO)
        WHERE PJ_NO = #{pj_no}
        ORDER BY A.BOARD_NO DESC
    </select>


    <select id="selectPjBoardList" parameterType="map" resultMap="boardAllSet">
        SELECT DISTINCT A.BOARD_NO,
        A.PJ_NO,
        A.BOARD_TYPE,
        TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD HH24:MI') AS CREATE_DATE,
        E.NAME,
        A.WRITER,
        B.POST_TITLE,
        C.SCH_TITLE,
        C.SCH_START,
        D.TODO_TITLE
        FROM PJ_BOARD A
        LEFT JOIN BOARD_POST B
        ON A.BOARD_NO = B.BOARD_NO
        LEFT JOIN BOARD_SCHEDULE C
        ON A.BOARD_NO = C.BOARD_NO
        LEFT JOIN BOARD_TODO D
        ON A.BOARD_NO = D.BOARD_NO
        JOIN EMPLOYEE E
        ON A.WRITER = E.EMP_NO
        JOIN PROJECT F
        ON F.PJ_NO = A.PJ_NO
        <where>
        <if test="pj_no == 0 || pj_no.equals('0')">
            AND F.STATUS = 'Y'
            AND E.EMP_NO = #{emp_no}
        </if>
            <if test="pj_no != 0 &amp;&amp; !pj_no.equals('0')">
                AND A.PJ_NO = #{pj_no}
            </if>
        <if test="board_type != null &amp;&amp; board_type != ''">
            AND A.BOARD_TYPE = #{board_type}
        </if>
        <if test="pj_no == 0 || pj_no.equals('0')">
            AND E.EMP_NO = #{emp_no}
        </if>
        <if test="sd.searchTarget.equals('name') &amp;&amp; sd.searchKeyword != null &amp;&amp; !sd.searchKeyword.equals('')">
            AND E.NAME LIKE '%'||#{sd.searchKeyword}||'%'
        </if>
        <if test="sd.searchTarget.equals('title') &amp;&amp; sd.searchKeyword != null &amp;&amp; !sd.searchKeyword.equals('')">
            AND (B.POST_TITLE LIKE '%'||#{sd.searchKeyword}||'%'
            OR C.SCH_TITLE LIKE '%'||#{sd.searchKeyword}||'%'
            OR D.TODO_TITLE LIKE '%'||#{sd.searchKeyword}||'%')
        </if>
        <if test="sd.searchTarget.equals('content') &amp;&amp; sd.searchKeyword != null &amp;&amp; !sd.searchKeyword.equals('')">
            AND (B.POST_CONTENT LIKE '%'||#{sd.searchKeyword}||'%'
            OR C.SCH_CONTENT LIKE '%'||#{sd.searchKeyword}||'%'
            OR C.SCH_PLACE LIKE '%'||#{sd.searchKeyword}||'%'
            OR D.TODO_CONTENT LIKE '%'||#{sd.searchKeyword}||'%')
        </if>
        </where>
        ORDER BY A.BOARD_NO DESC
    </select>


    <select id="getListCount" parameterType="map" resultType="_int">
        SELECT
        COUNT(DISTINCT A.BOARD_NO)
        FROM PJ_BOARD A
        JOIN EMPLOYEE E
        ON A.WRITER = E.EMP_NO
        LEFT JOIN BOARD_POST B
        ON A.BOARD_NO = B.BOARD_NO
        LEFT JOIN BOARD_SCHEDULE C
        ON A.BOARD_NO = C.BOARD_NO
        LEFT JOIN BOARD_TODO D
        ON A.BOARD_NO = D.BOARD_NO
        JOIN PROJECT F
        ON F.PJ_NO = A.PJ_NO
        <where>
            <if test="pj_no == 0 || pj_no.equals('0')">
                AND F.STATUS = 'Y'
                AND E.EMP_NO = #{emp_no}
            </if>
            <if test="sd.searchTarget.equals('name') &amp;&amp; sd.searchKeyword != null &amp;&amp; !sd.searchKeyword.equals('')">
                AND E.NAME LIKE '%'||#{sd.searchKeyword}||'%'
            </if>
            <if test="sd.searchTarget.equals('title') &amp;&amp; sd.searchKeyword != null &amp;&amp; !sd.searchKeyword.equals('')">
                AND (B.POST_TITLE LIKE '%'||#{sd.searchKeyword}||'%'
                OR C.SCH_TITLE LIKE '%'||#{sd.searchKeyword}||'%'
                OR D.TODO_TITLE LIKE '%'||#{sd.searchKeyword}||'%')
            </if>
            <if test="sd.searchTarget.equals('content') &amp;&amp; sd.searchKeyword != null &amp;&amp; !sd.searchKeyword.equals('')">
                AND (B.POST_CONTENT LIKE '%'||#{sd.searchKeyword}||'%'
                OR C.SCH_CONTENT LIKE '%'||#{sd.searchKeyword}||'%'
                OR C.SCH_PLACE LIKE '%'||#{sd.searchKeyword}||'%'
                OR D.TODO_CONTENT LIKE '%'||#{sd.searchKeyword}||'%')
            </if>
            <if test="pj_no != 0 &amp;&amp; !pj_no.equals('0')">
                AND A.PJ_NO = #{pj_no}
            </if>
            <if test="board_type != null &amp;&amp; board_type != ''">
                AND A.BOARD_TYPE = #{board_type}
            </if>
        </where>
    </select>


    <delete id="deleteBoard" parameterType="int">
        DELETE
        FROM PJ_BOARD
        WHERE BOARD_NO = #{board_no}
    </delete>
    <update id="increaseCount" parameterType="int">
        UPDATE PJ_BOARD
        SET COUNT = COUNT + 1
        WHERE BOARD_NO = #{board_no}
    </update>
    <insert id="insertReply" parameterType="Reply">
        INSERT INTO BOARD_REPLY
        VALUES (REPLY_SEQ.NEXTVAL, #{board_no}, #{writer}, #{reply_content}, SYSDATE)
    </insert>
    <select id="selectReply" parameterType="int" resultMap="replySet">
        SELECT A.*, B.NAME, C.CHANGE_NAME
        FROM BOARD_REPLY A
                 JOIN EMPLOYEE B
                      ON A.WRITER = B.EMP_NO
                 LEFT JOIN ATTACHMENT C
                           ON (B.FILE_NO = C.FILE_NO)
        WHERE BOARD_NO = #{board_no}
        ORDER BY A.REPLY_NO
    </select>
    <delete id="deleteReply" parameterType="int">
        DELETE
        FROM BOARD_REPLY
        WHERE REPLY_NO = #{reply_no}
    </delete>
</mapper>